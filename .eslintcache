[{"/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/index.js":"1","/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/App.js":"2","/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/reportWebVitals.js":"3","/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/Stream.js":"4","/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/Lobby.js":"5"},{"size":478,"mtime":1609236432048,"results":"6","hashOfConfig":"7"},{"size":480,"mtime":1609343867259,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609177586837,"results":"9","hashOfConfig":"7"},{"size":6314,"mtime":1609372146604,"results":"10","hashOfConfig":"7"},{"size":2353,"mtime":1609376526121,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"gy1qqt",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/index.js",[],["24","25"],"/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/App.js",[],"/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/reportWebVitals.js",[],"/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/Stream.js",["26","27"],"import React, { useEffect, useState, useRef } from 'react';\nimport Peer from \"simple-peer\";\nimport { If, Else, Then } from 'react-if';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { CameraVideo, CameraVideoOff, Mic, MicMute, DoorOpen } from 'react-bootstrap-icons';\nimport './Stream.css'\n\nfunction Stream(props) {\n  console.log('props', props)\n\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [mute, setMute] = useState(false);\n  const [videoShow, setVideoShow] = useState(true);\n\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n      setStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    })\n\n    props.socket.on(\"calling\", (data) => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n    })\n\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      props.socket.emit(\"leaveRoom\", { userToCall: caller, from: props.yourID })\n    }\n  }, [])\n\n\n\n  function callPeer() {\n    console.log('peer')\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      // config: {\n      //   iceServers: [{ 'url': 'stun:custom.stun.server:3478' }]\n      // },\n      stream: stream,\n    });\n\n    peer.on(\"signal\", data => {\n      props.socket.emit(\"callUser\", { userToCall: props.userToCall, signalData: data, from: props.yourID })\n    })\n\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n\n    props.socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    })\n\n    props.socket.on('endCall', () => {\n      peer.destroy();\n    })\n\n  }\n\n  function acceptCall() {\n    console.log('peer')\n\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream,\n    });\n\n    peer.on(\"signal\", data => {\n      props.socket.emit(\"acceptCall\", { signal: data, to: caller })\n    })\n\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n\n    props.socket.on('endCall', signal => {\n      peer.destroy();\n    })\n\n    peer.signal(callerSignal);\n  }\n\n  let UserVideo;\n  if (stream) {\n    UserVideo = (\n      <video style={{ width: '100%' ,marginTop:'5px' , marginRight : '8px' , border: '0.5px solid #0E71EB' }} muted playsInline ref={userVideo} autoPlay />\n    );\n  }\n\n  let PartnerVideo;\n  if (callAccepted) {\n    PartnerVideo = (\n      <video style={{ width: '100%' , height:'90vh'  }} muted={mute} playsInline ref={partnerVideo} autoPlay />\n    );\n  }\n\n  let incomingCall;\n  if (receivingCall) {\n    incomingCall = (\n      <div id='goDiv'>\n        <Row style={{fontSize:'32px' }}> Interviewer request you to the meeting </Row>\n        <Row style={{display:'flex' , justifyContent: 'space-between'}}>\n          <Col>Press <b>GO</b> to start, <b>Jobify wish you luck</b></Col>\n          <Col><button id='goButton'  onClick={acceptCall}>GO</button></Col>\n        </Row>\n        \n      </div>\n    )\n  }\n\n  function videoOff() {\n    stream.getTracks().forEach(track => track.enabled = !track.enabled);\n  }\n  if (props.initalCall) {\n    callPeer();\n  }\n  return (\n    <Container style={{ position: 'relative', height: '100vh' }}>\n      <Row style={{ display: 'flex', justifyContent: 'center' , minHeight:'90vh', backgroundColor:'black' }}>\n        <Col style={{ width: '15%', display: 'flex', justifyContent: 'center', alignItems: 'center' ,zIndex:'99' , position: 'fixed' , right:'0' , top:'0' }} sm={6}>\n          {UserVideo}\n        </Col>\n        <Col style={{ width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' , objectFit:'cover' }}  sm={6} >\n          {PartnerVideo}\n          <If condition={!callAccepted}>\n            <img style={{ width: '25%' }} src=\"https://cdn4.iconfinder.com/data/icons/small-n-flat/24/user-alt-512.png\" alt=\"thumbnail\" className=\"img-thumbnail\" />\n          </If>\n        </Col>\n      </Row>\n\n      <If condition={!callAccepted}>\n        <div style={{ position: 'absolute', top: '75%', left: '50%', transform: 'translate(-50%,-50%)'  }}>\n          {incomingCall}\n        </div>\n      </If>\n      <Row style={{ display: 'flex', justifyContent: 'space-between', position: 'absolute', bottom: '0', width: '100%', height: '10vh', backgroundColor: '#232333', alignItems: 'center', right: '0' }}>\n        <Col style={{ display: 'flex', flexDirection: 'row' }}>\n\n          <Col style={{ marginRight: '20px', marginLeft: '20px' }} >\n            <If condition={mute}>\n              <Then>\n                <MicMute color='#BABACC' style={{ cursor: 'pointer', alignItems: 'center' }} size='32' onClick={() => { setMute(mute ? false : true) }} />\n              </Then>\n              <Else>\n                <Mic color='#BABACC' style={{ cursor: 'pointer' }} size='32' onClick={() => { setMute(mute ? false : true) }} />\n              </Else>\n            </If>\n          </Col>\n          <Col >\n            <If condition={videoShow}>\n              <Then>\n                <CameraVideo color='#BABACC' style={{ cursor: 'pointer' }} size='32' onClick={() => {\n                  videoOff()\n                  setVideoShow(false)\n                }} />\n              </Then>\n              <Else>\n                <CameraVideoOff color='#BABACC' style={{ cursor: 'pointer' }} size='32' onClick={() => {\n                  videoOff()\n                  setVideoShow(true)\n                }} />\n              </Else>\n            </If>\n          </Col>\n        </Col>\n        <Col style={{ marginRight: '20px' }}>\n          <DoorOpen color='#BABACC' style={{ cursor: 'pointer' }} size='32' onClick={() => {\n            stream.getAudioTracks()[0].stop();\n            stream.getVideoTracks()[0].stop();\n            props.socket.emit(\"leaveRoom\", { userToCall: caller, from: props.yourID })\n            props.setShowHandler(false)\n          }} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\n\nexport default Stream;\n\n\n\n","/mnt/c/Users/STD/LTUC/MyProjects/mrstream-frontend/src/Lobby.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":38,"column":6,"nodeType":"34","endLine":38,"endColumn":8,"suggestions":"35"},{"ruleId":"32","severity":1,"message":"36","line":44,"column":6,"nodeType":"34","endLine":44,"endColumn":8,"suggestions":"37"},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.socket'. Either include it or remove the dependency array.","ArrayExpression",["40"],"React Hook useEffect has missing dependencies: 'caller', 'props.socket', and 'props.yourID'. Either include them or remove the dependency array.",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},{"desc":"44","fix":"45"},"Update the dependencies array to be: [props.socket]",{"range":"46","text":"47"},"Update the dependencies array to be: [caller, props.socket, props.yourID]",{"range":"48","text":"49"},[1159,1161],"[props.socket]",[1296,1298],"[caller, props.socket, props.yourID]"]